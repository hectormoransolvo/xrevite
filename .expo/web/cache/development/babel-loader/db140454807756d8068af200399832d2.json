{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { COL_TYPES } from \"./DataTable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PADDING_TOP = 20;\nvar DataTableHeader = React.memo(function (props) {\n  var colNames = props.colNames,\n      mapColNameToType = props.mapColNameToType,\n      defaultEachColumnWidth = props.defaultEachColumnWidth,\n      handleColPress = props.handleColPress,\n      doSort = props.doSort;\n  var isDoSort = doSort == false ? false : true;\n  return _jsx(View, {\n    style: styles.headerContainer,\n    children: colNames.map(function (colName, index) {\n      var colType = mapColNameToType[colName];\n      var justifyContent = colType == COL_TYPES.STRING || colType == null ? 'flex-start' : colType == COL_TYPES.CHECK_BOX || colType == COL_TYPES.RADIO ? 'center' : 'flex-end';\n      var paddingLeft = 0;\n      var paddingRight = 0;\n\n      if (justifyContent == 'flex-start') {\n        paddingLeft = 13;\n        paddingRight = 1;\n      } else if (justifyContent == 'flex-end') {\n        paddingRight = 13;\n        paddingLeft = 1;\n      }\n\n      if (colType == COL_TYPES.CHECK_BOX) {\n        return _jsx(View, {\n          style: [styles.headerRow, {\n            width: defaultEachColumnWidth,\n            justifyContent: justifyContent\n          }],\n          children: _jsx(Text, {\n            style: [styles.headerLabel, {\n              textAlign: 'center'\n            }],\n            adjustsFontSizeToFit: true,\n            numberOfLines: 20,\n            children: ' ' + colName[0].toUpperCase() + colName.substring(1)\n          })\n        }, index);\n      }\n\n      if (isDoSort) {\n        return _jsxs(TouchableOpacity, {\n          style: [styles.headerRow, {\n            width: defaultEachColumnWidth,\n            paddingLeft: paddingLeft,\n            paddingRight: paddingRight\n          }],\n          onPress: handleColPress.bind(null, colName),\n          children: [_jsx(View, {\n            style: {\n              flex: paddingRight == 13 ? 1 : undefined,\n              alignItems: paddingRight == 13 ? 'flex-end' : undefined,\n              minWidth: 8\n            },\n            children: _jsx(Image, {\n              source: require(\"../assets/doubleArrow.png\")\n            })\n          }), _jsx(View, {\n            style: {\n              width: paddingLeft == 13 ? '71%' : undefined\n            },\n            children: _jsx(Text, {\n              adjustsFontSizeToFit: true,\n              numberOfLines: 20,\n              style: [styles.headerLabel],\n              children: ' ' + colName[0].toUpperCase() + colName.substring(1)\n            })\n          })]\n        }, index);\n      } else {\n        var isLeft = paddingLeft == 1 ? false : true;\n        return _jsx(View, {\n          style: {\n            width: defaultEachColumnWidth,\n            paddingTop: PADDING_TOP,\n            paddingBottom: 18\n          },\n          children: _jsx(Text, {\n            style: _objectSpread(_objectSpread({}, styles.headerLabel), {}, {\n              paddingLeft: paddingLeft,\n              paddingRight: paddingRight,\n              textAlign: isLeft ? 'left' : 'right',\n              left: isLeft ? -0.5 : undefined\n            }),\n            adjustsFontSizeToFit: true,\n            numberOfLines: 20,\n            children: colName[0].toUpperCase() + colName.substring(1)\n          })\n        }, index);\n      }\n    })\n  });\n});\nexport default DataTableHeader;\nvar styles = StyleSheet.create({\n  headerContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n    alignItems: 'center'\n  },\n  headerRow: {\n    paddingTop: PADDING_TOP,\n    paddingBottom: 18,\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: '100%'\n  },\n  headerLabel: {\n    color: 'grey',\n    fontSize: 12\n  }\n});","map":{"version":3,"sources":["D:/react-native/xrevi/node_modules/react-native-datatable-component/src/DataTableHeader.js"],"names":["React","COL_TYPES","PADDING_TOP","DataTableHeader","memo","props","colNames","mapColNameToType","defaultEachColumnWidth","handleColPress","doSort","isDoSort","styles","headerContainer","map","colName","index","colType","justifyContent","STRING","CHECK_BOX","RADIO","paddingLeft","paddingRight","headerRow","width","headerLabel","textAlign","toUpperCase","substring","bind","flex","undefined","alignItems","minWidth","require","isLeft","paddingTop","paddingBottom","left","StyleSheet","create","flexDirection","paddingHorizontal","height","color","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, Image, StyleSheet, TouchableOpacity } from 'react-native';\nimport { COL_TYPES } from './DataTable';\n\nconst PADDING_TOP = 20;\n\nconst DataTableHeader = React.memo((props) => {\n\n    const { colNames, mapColNameToType, defaultEachColumnWidth, handleColPress, doSort } = props;\n\n    const isDoSort = doSort == false ? false : true;\n\n    return (\n        <View style={styles.headerContainer}>\n            {\n                colNames.map((colName, index) => {\n                    const colType = mapColNameToType[colName]\n                    const justifyContent = (colType == COL_TYPES.STRING || colType == null) ? 'flex-start' : (colType == COL_TYPES.CHECK_BOX || colType == COL_TYPES.RADIO) ? 'center' : 'flex-end'\n                    let paddingLeft = 0;\n                    let paddingRight = 0;\n                    if (justifyContent == 'flex-start') {\n                        paddingLeft = 13\n                        paddingRight = 1;\n                    } else if (justifyContent == 'flex-end') {\n                        paddingRight = 13;\n                        paddingLeft = 1\n                    }\n                    if (colType == COL_TYPES.CHECK_BOX) {\n                        return (\n                            <View key={index} style={[styles.headerRow, { width: defaultEachColumnWidth, justifyContent }]}>\n                                <Text style={[styles.headerLabel, { textAlign: 'center' }]} adjustsFontSizeToFit={true} numberOfLines={20}>{' ' + colName[0].toUpperCase() + colName.substring(1)}</Text>\n                            </View>\n                        )\n                    }\n                    if (isDoSort) {\n                        return (\n                            <TouchableOpacity key={index} style={[styles.headerRow, { width: defaultEachColumnWidth, paddingLeft, paddingRight }]} onPress={handleColPress.bind(null, colName)}>\n                                <View style={{ flex: paddingRight == 13 ? 1 : undefined, alignItems: paddingRight == 13 ? 'flex-end' : undefined, minWidth: 8 }}>\n                                    <Image source={require('../assets/doubleArrow.png')} />\n                                </View>\n                                <View style={{ width: paddingLeft == 13 ? '71%' : undefined }}>\n                                    <Text\n                                        adjustsFontSizeToFit={true}\n                                        numberOfLines={20}\n                                        style={[styles.headerLabel]}>\n                                        {' ' + colName[0].toUpperCase() + colName.substring(1)}\n                                    </Text>\n                                </View>\n                            </TouchableOpacity>\n                        );\n                    } else {\n                        const isLeft = paddingLeft == 1 ? false : true;\n                        return (\n                            <View style={{ width: defaultEachColumnWidth, paddingTop: PADDING_TOP, paddingBottom: 18 }} key={index}>\n                                <Text style={{ ...styles.headerLabel, paddingLeft, paddingRight, textAlign: isLeft ? 'left' : 'right', left: isLeft ? -0.5 : undefined }}\n                                    adjustsFontSizeToFit={true}\n                                    numberOfLines={20}\n                                >\n                                    {colName[0].toUpperCase() + colName.substring(1)}</Text>\n                            </View>\n                        )\n                    }\n                })\n            }\n        </View>\n    );\n})\n\nexport default DataTableHeader;\n\nconst styles = StyleSheet.create({\n    headerContainer: {\n        flexDirection: 'row',\n        paddingHorizontal: 10,\n        alignItems: 'center',\n    },\n    headerRow: {\n        paddingTop: PADDING_TOP,\n        paddingBottom: 18,\n        flexDirection: 'row',\n        alignItems: 'center',\n        height: '100%',\n    },\n    headerLabel: {\n        color: 'grey',\n        fontSize: 12\n    }\n});\n"]},"metadata":{},"sourceType":"module"}