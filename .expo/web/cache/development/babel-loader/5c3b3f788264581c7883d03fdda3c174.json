{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CheckBox = React.memo(function (props) {\n  var initialVal = props.initialVal,\n      handleOnRowSelect = props.handleOnRowSelect,\n      info = props.info;\n  return _jsx(TouchableOpacity, {\n    style: styles.touchableOpacity,\n    onPress: handleOnRowSelect == null ? void 0 : handleOnRowSelect.bind(null, !initialVal, info.id, info.name),\n    disabled: props == null ? void 0 : props.disabled,\n    children: _jsx(View, {\n      style: [styles.container, {\n        backgroundColor: initialVal ? props != null && props.backgroundColor ? props == null ? void 0 : props.backgroundColor : 'blue' : 'transparent',\n        borderColor: props != null && props.backgroundColor ? props == null ? void 0 : props.backgroundColor : 'blue'\n      }],\n      children: initialVal && _jsx(Image, {\n        source: require(\"../assets/tick.png\"),\n        style: [{\n          tintColor: props != null && props.tickColor ? props.tickColor : 'white',\n          width: 15,\n          height: 15\n        }],\n        resizeMode: 'cover'\n      })\n    })\n  });\n});\nexport default CheckBox;\nvar styles = StyleSheet.create({\n  container: {\n    width: 20,\n    height: 20,\n    borderWidth: 1.5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'blue',\n    borderRadius: 2\n  },\n  touchableOpacity: {\n    width: 35,\n    height: 33,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["D:/react-native/xrevi/node_modules/react-native-datatable-component/src/CheckBox.js"],"names":["React","CheckBox","memo","props","initialVal","handleOnRowSelect","info","styles","touchableOpacity","bind","id","name","disabled","container","backgroundColor","borderColor","require","tintColor","tickColor","width","height","StyleSheet","create","borderWidth","justifyContent","alignItems","borderRadius"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAGA,IAAMC,QAAQ,GAAGD,KAAK,CAACE,IAAN,CAAW,UAACC,KAAD,EAAW;AAErC,MAAQC,UAAR,GAAgDD,KAAhD,CAAQC,UAAR;AAAA,MAAoBC,iBAApB,GAAgDF,KAAhD,CAAoBE,iBAApB;AAAA,MAAuCC,IAAvC,GAAgDH,KAAhD,CAAuCG,IAAvC;AAEA,SACE,KAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEC,MAAM,CAACC,gBAAhC;AAAkD,IAAA,OAAO,EAAEH,iBAAF,oBAAEA,iBAAiB,CAAEI,IAAnB,CAAwB,IAAxB,EAA8B,CAACL,UAA/B,EAA2CE,IAAI,CAACI,EAAhD,EAAoDJ,IAAI,CAACK,IAAzD,CAA3D;AAA2H,IAAA,QAAQ,EAAER,KAAF,oBAAEA,KAAK,CAAES,QAA5I;AAAA,cACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACL,MAAM,CAACM,SAAR,EAAmB;AAAEC,QAAAA,eAAe,EAAEV,UAAU,GAAID,KAAK,QAAL,IAAAA,KAAK,CAAEW,eAAP,GAAyBX,KAAzB,oBAAyBA,KAAK,CAAEW,eAAhC,GAAkD,MAAtD,GAAgE,aAA7F;AAA4GC,QAAAA,WAAW,EAAEZ,KAAK,QAAL,IAAAA,KAAK,CAAEW,eAAP,GAAyBX,KAAzB,oBAAyBA,KAAK,CAAEW,eAAhC,GAAkD;AAA3K,OAAnB,CAAb;AAAA,gBACGV,UAAU,IAAK,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEY,OAAO,sBAAtB;AAA8C,QAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,SAAS,EAAEd,KAAK,QAAL,IAAAA,KAAK,CAAEe,SAAP,GAAmBf,KAAK,CAACe,SAAzB,GAAqC,OAAlD;AAA2DC,UAAAA,KAAK,EAAE,EAAlE;AAAsEC,UAAAA,MAAM,EAAE;AAA9E,SAAD,CAArD;AAA2I,QAAA,UAAU,EAAE;AAAvJ;AADlB;AADF,IADF;AAOD,CAXgB,CAAjB;AAaA,eAAenB,QAAf;AAEA,IAAMM,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTM,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTG,IAAAA,WAAW,EAAE,GAHJ;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,UAAU,EAAE,QALH;AAMTV,IAAAA,WAAW,EAAE,MANJ;AAOTW,IAAAA,YAAY,EAAE;AAPL,GADoB;AAU/BlB,EAAAA,gBAAgB,EAAE;AAChBW,IAAAA,KAAK,EAAE,EADS;AAEhBC,IAAAA,MAAM,EAAE,EAFQ;AAGhBI,IAAAA,cAAc,EAAE,QAHA;AAIhBC,IAAAA,UAAU,EAAE;AAJI;AAVa,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { View, Image, StyleSheet, TouchableOpacity } from 'react-native';\n\nconst CheckBox = React.memo((props) => { //props: initialVal\n\n  const { initialVal, handleOnRowSelect, info } = props;\n\n  return (\n    <TouchableOpacity style={styles.touchableOpacity} onPress={handleOnRowSelect?.bind(null, !initialVal, info.id, info.name)} disabled={props?.disabled}>\n      <View style={[styles.container, { backgroundColor: initialVal ? (props?.backgroundColor ? props?.backgroundColor : 'blue') : 'transparent', borderColor: props?.backgroundColor ? props?.backgroundColor : 'blue' }]}>\n        {initialVal && (<Image source={require('../assets/tick.png')} style={[{ tintColor: props?.tickColor ? props.tickColor : 'white', width: 15, height: 15 }]} resizeMode={'cover'} />)}\n      </View>\n    </TouchableOpacity>\n  );\n})\n\nexport default CheckBox;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 20,\n    height: 20,\n    borderWidth: 1.5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'blue',\n    borderRadius: 2,\n  },\n  touchableOpacity: {\n    width: 35,\n    height: 33,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n})"]},"metadata":{},"sourceType":"module"}