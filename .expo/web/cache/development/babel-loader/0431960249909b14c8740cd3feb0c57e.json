{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport DataTableRow from 'react-native-datatable-component/src/DataTableRow';\nimport DataTableFooter from 'react-native-datatable-component/src/DataTableFooter';\nimport DataTableHeader from 'react-native-datatable-component/src/DataTableHeader';\nimport Line from 'react-native-datatable-component/src/Line';\nimport sortData from 'react-native-datatable-component/functions/sort';\nimport showCurrentProgress from 'react-native-datatable-component/functions/showCurrentProgress';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var COL_TYPES = {\n  INT: 'INT',\n  STRING: 'STRING',\n  CHECK_BOX: 'CHECK_BOX'\n};\nvar TOTAL_WIDTH = 100;\n\nvar DataTable = function (_React$Component) {\n  _inherits(DataTable, _React$Component);\n\n  var _super = _createSuper(DataTable);\n\n  function DataTable() {\n    var _this;\n\n    _classCallCheck(this, DataTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dataPropSnap: null,\n      data: [],\n      displayData: [],\n      colNames: [],\n      defaultEachColumnWidth: '50%',\n      widthOfContainer: 0,\n      isSortedAssending: {\n        recentlySortedCol: null\n      },\n      startDataArray: [],\n      endDataArray: [],\n      noOfPages: 3,\n      activeDisplayDataId: 0,\n      mapColNameToType: {}\n    };\n\n    _this.handleColPress = function (name) {\n      var newData = _toConsumableArray(_this.state.displayData);\n\n      var recentlySortedCol = _this.state.isSortedAssending.recentlySortedCol;\n\n      if (recentlySortedCol == name) {\n        var data = sortData(newData, _this.state.isSortedAssending[name], name);\n\n        _this.setState(function (state) {\n          var _objectSpread2;\n\n          return {\n            displayData: newData,\n            isSortedAssending: _objectSpread(_objectSpread({}, state.isSortedAssending), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, data.setIsSortedAsc), _defineProperty(_objectSpread2, \"recentlySortedCol\", name), _objectSpread2))\n          };\n        });\n      } else {\n        var _data = sortData(newData, _this.state.isSortedAssending[name], name, true);\n\n        _this.setState(function (state) {\n          var _objectSpread3;\n\n          return {\n            displayData: newData,\n            isSortedAssending: _objectSpread(_objectSpread({}, state.isSortedAssending), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, name, _data.setIsSortedAsc), _defineProperty(_objectSpread3, \"recentlySortedCol\", name), _objectSpread3))\n          };\n        });\n      }\n    };\n\n    _this.handleOnRowSelect = function (isChecked, id, colName) {\n      var data = _this.state.data.map(function (row) {\n        var _this$props;\n\n        if (row.id != id) return row;\n        if ('onRowSelect' in _this.props) (_this$props = _this.props) == null ? void 0 : _this$props.onRowSelect(_objectSpread(_objectSpread({}, row), {}, _defineProperty({}, colName, isChecked)));\n        return _objectSpread(_objectSpread({}, row), {}, _defineProperty({}, colName, isChecked));\n      });\n\n      var displayData = _this.state.displayData.map(function (row) {\n        if (row.id != id) return row;\n        return _objectSpread(_objectSpread({}, row), {}, _defineProperty({}, colName, isChecked));\n      });\n\n      _this.setState({\n        data: data,\n        displayData: displayData\n      });\n    };\n\n    _this.handleNextPreviousPagePress = function (type) {\n      if (type == 'next') {\n        var activeDisplayId = _this.state.activeDisplayDataId;\n\n        var endObj = _this.state.endDataArray.find(function (obj) {\n          return obj.id == activeDisplayId + 1;\n        });\n\n        var startObj = _this.state.startDataArray.find(function (obj) {\n          return obj.id == activeDisplayId + 1;\n        });\n\n        _this.setState({\n          displayData: _this.state.data.slice((startObj == null ? void 0 : startObj.startData) - 1, endObj == null ? void 0 : endObj.endData),\n          activeDisplayDataId: activeDisplayId + 1\n        });\n      } else if (type == 'back') {\n        var _activeDisplayId = _this.state.activeDisplayDataId;\n\n        var _endObj = _this.state.endDataArray.find(function (obj) {\n          return obj.id == _activeDisplayId - 1;\n        });\n\n        var _startObj = _this.state.startDataArray.find(function (obj) {\n          return obj.id == _activeDisplayId - 1;\n        });\n\n        _this.setState({\n          displayData: _this.state.data.slice((_startObj == null ? void 0 : _startObj.startData) - 1, _endObj == null ? void 0 : _endObj.endData),\n          activeDisplayDataId: _activeDisplayId - 1\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DataTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _this$props2;\n\n      return _jsxs(View, {\n        style: {\n          backgroundColor: this.props.backgroundColor ? this.props.backgroundColor : '#e4edec'\n        },\n        onLayout: function onLayout(e) {\n          _this2.setState({\n            widthOfContainer: e.nativeEvent.layout.width\n          });\n        },\n        children: [_jsx(DataTableHeader, {\n          colNames: this.state.colNames,\n          mapColNameToType: this.state.mapColNameToType,\n          defaultEachColumnWidth: this.state.defaultEachColumnWidth,\n          handleColPress: this.handleColPress,\n          doSort: (_this$props2 = this.props) == null ? void 0 : _this$props2.doSort\n        }), _jsx(Line, {\n          width: this.state.widthOfContainer,\n          header: true\n        }), _jsx(ScrollView, {\n          children: this.state.displayData.map(function (item, index) {\n            return _jsx(DataTableRow, {\n              handleOnRowSelect: _this2.handleOnRowSelect,\n              widthOfLine: _this2.state.widthOfContainer,\n              index: index,\n              data: item,\n              mapColNameToType: _this2.state.mapColNameToType,\n              colNames: _this2.state.colNames,\n              style: {\n                defaultEachColumnWidth: _this2.state.defaultEachColumnWidth\n              }\n            }, index);\n          })\n        }), _jsx(DataTableFooter, {\n          start: this.state.startDataArray,\n          end: this.state.endDataArray,\n          activeDataId: this.state.activeDisplayDataId,\n          dataLength: this.state.data.length,\n          handleNextPreviousPagePress: this.handleNextPreviousPagePress\n        })]\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, currentState) {\n      var _props$colSettings, _end$;\n\n      if (JSON.stringify(props.data) === JSON.stringify(currentState.dataPropSnap)) return null;\n      var data = props == null ? void 0 : props.data;\n      var colNames = props == null ? void 0 : props.colNames;\n\n      if (typeof data != 'object') {\n        data = [];\n      }\n\n      if (typeof colNames != 'object') {\n        colNames = ['No Columns'];\n      }\n\n      var mapColNameToType = {};\n      (_props$colSettings = props.colSettings) == null ? void 0 : _props$colSettings.forEach(function (setting) {\n        if (!colNames.includes(setting.name)) throw new Error('No Column exists which mentioned in provided colSettings prop Name!');\n        mapColNameToType[setting.name] = setting.type;\n      });\n      var start = [];\n      var end = [];\n\n      if (data.length != 0) {\n        var _data2;\n\n        var progress = showCurrentProgress(props == null ? void 0 : props.noOfPages, (_data2 = data) == null ? void 0 : _data2.length);\n\n        if (progress) {\n          start = progress.start;\n          end = progress.end;\n        }\n      }\n\n      var noOfCols = colNames.length;\n      var isSortedAssending = {};\n      colNames.forEach(function (name) {\n        isSortedAssending[name] = false;\n      });\n      var modifiedData = data.map(function (row, index) {\n        if (!row.id) return _objectSpread(_objectSpread({}, row), {}, {\n          id: index\n        });\n        return row;\n      });\n      return {\n        dataPropSnap: props == null ? void 0 : props.data,\n        data: modifiedData,\n        displayData: modifiedData.slice(0, (_end$ = end[0]) == null ? void 0 : _end$.endData),\n        colNames: _toConsumableArray(colNames),\n        defaultEachColumnWidth: TOTAL_WIDTH / noOfCols + '%',\n        isSortedAssending: _objectSpread(_objectSpread({}, currentState.isSortedAssending), isSortedAssending),\n        activeDisplayDataId: 0,\n        startDataArray: start,\n        endDataArray: end,\n        mapColNameToType: mapColNameToType\n      };\n    }\n  }]);\n\n  return DataTable;\n}(React.Component);\n\nexport default DataTable;","map":{"version":3,"sources":["D:/react-native/xrevi/node_modules/react-native-datatable-component/src/DataTable.tsx"],"names":["React","DataTableRow","DataTableFooter","DataTableHeader","Line","sortData","showCurrentProgress","COL_TYPES","INT","STRING","CHECK_BOX","TOTAL_WIDTH","DataTable","state","dataPropSnap","data","displayData","colNames","defaultEachColumnWidth","widthOfContainer","isSortedAssending","recentlySortedCol","startDataArray","endDataArray","noOfPages","activeDisplayDataId","mapColNameToType","handleColPress","name","newData","setState","setIsSortedAsc","handleOnRowSelect","isChecked","id","colName","map","row","props","onRowSelect","handleNextPreviousPagePress","type","activeDisplayId","endObj","find","obj","startObj","slice","startData","endData","backgroundColor","e","nativeEvent","layout","width","doSort","item","index","length","currentState","JSON","stringify","colSettings","forEach","setting","includes","Error","start","end","progress","noOfCols","modifiedData","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, ScrollView } from 'react-native';\nimport DataTableRow from 'react-native-datatable-component/src/DataTableRow';\nimport DataTableFooter from 'react-native-datatable-component/src/DataTableFooter';\nimport DataTableHeader from 'react-native-datatable-component/src/DataTableHeader';\nimport Line from 'react-native-datatable-component/src/Line';\nimport sortData from 'react-native-datatable-component/functions/sort';\nimport showCurrentProgress from 'react-native-datatable-component/functions/showCurrentProgress';\n\nexport const COL_TYPES = {\n    INT: 'INT',\n    STRING: 'STRING',\n    CHECK_BOX: 'CHECK_BOX'\n}\n\nconst TOTAL_WIDTH = 100; //'100%'\n\ninterface PropTypes {\n    data?: object[];\n    colNames?: string[];\n    colSettings?: object[];\n    noOfPages?: number;\n    onRowSelect?: (anyVariable) => object;\n    backgroundColor?: string;\n    doSort?: boolean;\n}\n\nclass DataTable extends React.Component<PropTypes> {\n    state = {\n        dataPropSnap: null,\n        data: [], //[{...}, {...}, ....]\n        displayData: [], //currentlyDisplayData\n        colNames: [],//['ad', 'asd', ...]\n        defaultEachColumnWidth: '50%',\n        // noOfCols: 0, //default 2, set 0 because of fast rendering at start\n        widthOfContainer: 0,\n        isSortedAssending: { recentlySortedCol: null }, //ColName: true||false\n        startDataArray: [],//[{id: startData}]\n        endDataArray: [], //[{id, endData}]\n        noOfPages: 3, //default\n        activeDisplayDataId: 0,\n        mapColNameToType: {}\n    }\n\n\n    handleColPress = name => {\n        const newData = [...this.state.displayData];\n\n        const { recentlySortedCol } = this.state.isSortedAssending\n\n        if (recentlySortedCol == name) {\n            // Here we want to sort based on previus col State\n            const data = sortData(newData, this.state.isSortedAssending[name], name)\n            this.setState(state => ({\n                displayData: newData,\n                isSortedAssending: {\n                    ...state.isSortedAssending,\n                    [name]: data.setIsSortedAsc,\n                    recentlySortedCol: name\n                }\n            }))\n        } else {\n            // Here we want to sort always in ascending Order\n            const data = sortData(newData, this.state.isSortedAssending[name], name, true)\n            this.setState(state => ({\n                displayData: newData,\n                isSortedAssending: {\n                    ...state.isSortedAssending,\n                    [name]: data.setIsSortedAsc,\n                    recentlySortedCol: name\n                }\n            }))\n        }\n    }\n\n    handleOnRowSelect = (isChecked, id, colName) => {\n        const data = this.state.data.map(row => {\n            if (row.id != id) return row;\n            if ('onRowSelect' in this.props) this.props?.onRowSelect({ ...row, [colName]: isChecked }) // Sending props\n            return { ...row, [colName]: isChecked }\n        })\n\n        const displayData = this.state.displayData.map(row => {\n            if (row.id != id) return row;\n            return { ...row, [colName]: isChecked }\n        })\n\n        this.setState({\n            data,\n            displayData\n        })\n    }\n\n    handleNextPreviousPagePress = (type) => {//next | back\n        if (type == 'next') {\n            // this.state.activeDisplayDataId\n            const activeDisplayId = this.state.activeDisplayDataId;\n            const endObj = this.state.endDataArray.find(obj => obj.id == activeDisplayId + 1);\n            const startObj = this.state.startDataArray.find(obj => obj.id == activeDisplayId + 1);\n\n            this.setState({\n                displayData: this.state.data.slice(startObj?.startData - 1, endObj?.endData),\n                activeDisplayDataId: activeDisplayId + 1\n            });\n\n        } else if (type == 'back') {\n            const activeDisplayId = this.state.activeDisplayDataId;\n            const endObj = this.state.endDataArray.find(obj => obj.id == activeDisplayId - 1);\n            const startObj = this.state.startDataArray.find(obj => obj.id == activeDisplayId - 1);\n\n            this.setState({\n                displayData: this.state.data.slice(startObj?.startData - 1, endObj?.endData),\n                activeDisplayDataId: activeDisplayId - 1\n            });\n        }\n    }\n\n    static getDerivedStateFromProps(props, currentState) {\n        //this called on every setState() & on mount & on prop changes\n        if (JSON.stringify(props.data) === JSON.stringify(currentState.dataPropSnap)) return null;\n        //Here below code means that data prop is changed\n        let data = props?.data\n        let colNames = props?.colNames;\n\n        if (typeof (data) != 'object') {\n            data = [];\n        }\n        if (typeof (colNames) != 'object') {\n            colNames = ['No Columns'];\n        }\n\n        const mapColNameToType = {}\n        props.colSettings?.forEach(setting => {\n            if (!colNames.includes(setting.name)) throw new Error('No Column exists which mentioned in provided colSettings prop Name!')\n            mapColNameToType[setting.name] = setting.type;\n        })\n        let start = [];\n        let end = []\n        if (data.length != 0) {\n            const progress = showCurrentProgress(props?.noOfPages, data?.length) //[{id, endData}]\n            if (progress) {\n                start = progress.start;\n                end = progress.end;\n            }\n        }\n\n        const noOfCols = colNames.length;\n        const isSortedAssending = {};\n        colNames.forEach(name => {\n            isSortedAssending[name] = false;\n        })\n\n        const modifiedData = data.map((row, index) => {\n            if (!row.id) return { ...row, id: index }\n            return row;\n        })\n        return {\n            dataPropSnap: props?.data,\n            data: modifiedData,\n            displayData: modifiedData.slice(0, end[0]?.endData),\n            colNames: [...colNames],\n            defaultEachColumnWidth: TOTAL_WIDTH / noOfCols + '%',\n            isSortedAssending: { ...currentState.isSortedAssending, ...isSortedAssending },\n            activeDisplayDataId: 0, //by default it's zero\n            startDataArray: start,\n            endDataArray: end,\n            mapColNameToType\n        };\n    }\n\n    render() {\n\n        return (\n            <View style={{ backgroundColor: this.props.backgroundColor ? this.props.backgroundColor : '#e4edec' }}\n                onLayout={e => {\n                    this.setState({ widthOfContainer: e.nativeEvent.layout.width })\n                }}>\n\n                <DataTableHeader\n                    colNames={this.state.colNames}\n                    mapColNameToType={this.state.mapColNameToType}\n                    defaultEachColumnWidth={this.state.defaultEachColumnWidth}\n                    handleColPress={this.handleColPress}\n                    doSort={this.props?.doSort}\n                />\n\n                <Line width={this.state.widthOfContainer} header />\n                <ScrollView>\n                    {\n                        this.state.displayData.map((item, index) => (\n                            <DataTableRow\n                                handleOnRowSelect={this.handleOnRowSelect}\n                                widthOfLine={this.state.widthOfContainer}\n                                key={index}\n                                index={index}\n                                data={item}\n                                mapColNameToType={this.state.mapColNameToType}\n                                colNames={this.state.colNames}\n                                style={{ defaultEachColumnWidth: this.state.defaultEachColumnWidth }}\n                            />\n                        ))\n                    }\n                </ScrollView>\n                <DataTableFooter\n                    start={this.state.startDataArray}\n                    end={this.state.endDataArray}\n                    activeDataId={this.state.activeDisplayDataId}\n                    dataLength={this.state.data.length}\n                    handleNextPreviousPagePress={this.handleNextPreviousPagePress}\n                />\n\n            </View>\n        );\n    }\n}\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}