{"ast":null,"code":"import React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar LAST_ROW_HEIGHT = 40;\nvar DataTableFooter = React.memo(function (props) {\n  var start = props.start,\n      end = props.end,\n      activeDataId = props.activeDataId,\n      dataLength = props.dataLength,\n      handleNextPreviousPagePress = props.handleNextPreviousPagePress;\n  var mapStartToEndId = {};\n  var startObj = start.find(function (obj) {\n    return obj.id == activeDataId;\n  });\n  var endObj = end.find(function (obj) {\n    return obj.id == activeDataId;\n  });\n  var isShowSingleInfo = false;\n\n  if ((startObj == null ? void 0 : startObj.startData) == (endObj == null ? void 0 : endObj.endData)) {\n    isShowSingleInfo = true;\n  }\n\n  var isDataAvailable = true;\n\n  if (!startObj && !endObj) {\n    isDataAvailable = false;\n  }\n\n  console.log(startObj, endObj);\n  return _jsxs(View, {\n    style: styles.lastRow,\n    children: [_jsx(View, {\n      style: styles.noOfPages,\n      children: isDataAvailable ? isShowSingleInfo ? _jsxs(Text, {\n        style: styles.noOfPagesLabel,\n        numberOfLines: 1,\n        adjustsFontSizeToFit: true,\n        children: [endObj == null ? void 0 : endObj.endData, \" of \", dataLength]\n      }) : _jsxs(Text, {\n        style: styles.noOfPagesLabel,\n        numberOfLines: 1,\n        adjustsFontSizeToFit: true,\n        children: [startObj == null ? void 0 : startObj.startData, \"-\", endObj == null ? void 0 : endObj.endData, \" of \", dataLength]\n      }) : _jsx(Text, {\n        style: styles.noOfPagesLabel,\n        numberOfLines: 1,\n        adjustsFontSizeToFit: true,\n        children: \"0 of 0\"\n      })\n    }), _jsx(TouchableOpacity, {\n      disabled: (startObj == null ? void 0 : startObj.startData) == 1 || !isDataAvailable ? true : false,\n      onPress: handleNextPreviousPagePress.bind(null, 'back'),\n      children: _jsx(View, {\n        style: styles.lessThan,\n        children: _jsx(Image, {\n          source: require(\"../assets/lessThan.png\"),\n          resizeMode: 'contain',\n          style: [styles.iconStyle, {\n            opacity: (startObj == null ? void 0 : startObj.startData) == 1 || !isDataAvailable ? 0.3 : 1\n          }]\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      disabled: (endObj == null ? void 0 : endObj.endData) == dataLength || !isDataAvailable ? true : false,\n      onPress: handleNextPreviousPagePress.bind(null, 'next'),\n      children: _jsx(View, {\n        style: styles.greaterThan,\n        children: _jsx(Image, {\n          source: require(\"../assets/greaterThan.png\"),\n          resizeMode: 'contain',\n          style: [styles.iconStyle, {\n            opacity: (endObj == null ? void 0 : endObj.endData) == dataLength || !isDataAvailable ? 0.3 : 1\n          }]\n        })\n      })\n    })]\n  });\n});\nexport default DataTableFooter;\nvar styles = StyleSheet.create({\n  lastRow: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    height: LAST_ROW_HEIGHT,\n    paddingHorizontal: 10\n  },\n  greaterThan: {\n    paddingRight: 7,\n    paddingLeft: 14.5,\n    justifyContent: 'center',\n    height: '100%'\n  },\n  lessThan: {\n    paddingLeft: 14.5,\n    paddingRight: 14.5,\n    justifyContent: 'center',\n    height: '100%'\n  },\n  noOfPages: {\n    paddingLeft: 14.5,\n    paddingRight: 14.5,\n    justifyContent: 'center'\n  },\n  noOfPagesLabel: {\n    color: 'grey',\n    fontSize: 12\n  },\n  iconStyle: {\n    height: LAST_ROW_HEIGHT / 2\n  }\n});","map":{"version":3,"sources":["D:/react-native/xrevi/node_modules/react-native-datatable-component/src/DataTableFooter.js"],"names":["React","LAST_ROW_HEIGHT","DataTableFooter","memo","props","start","end","activeDataId","dataLength","handleNextPreviousPagePress","mapStartToEndId","startObj","find","obj","id","endObj","isShowSingleInfo","startData","endData","isDataAvailable","console","log","styles","lastRow","noOfPages","noOfPagesLabel","bind","lessThan","require","iconStyle","opacity","greaterThan","StyleSheet","create","flexDirection","justifyContent","alignItems","height","paddingHorizontal","paddingRight","paddingLeft","color","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, Image, StyleSheet, TouchableOpacity } from 'react-native';\n\nconst LAST_ROW_HEIGHT = 40;\n\nconst DataTableFooter = React.memo((props) => {\n\n    const {start, end, activeDataId, dataLength, handleNextPreviousPagePress} = props    \n    \n    // console.log(start, end, activeDataId, dataLength)\n\n    const mapStartToEndId = {}\n    \n    const startObj = start.find(obj => obj.id == activeDataId);\n    const endObj = end.find(obj => obj.id == activeDataId);\n\n    let isShowSingleInfo = false;\n    if (startObj?.startData ==  endObj?.endData){\n        isShowSingleInfo = true;\n    }\n\n    let isDataAvailable = true;\n    if (!startObj && !endObj){\n        isDataAvailable = false;\n    }\n    console.log(startObj, endObj)\n    return (\n        <View style={styles.lastRow}>\n            <View style={styles.noOfPages}>\n                {\n                    isDataAvailable ? (isShowSingleInfo ? (\n                        <Text style={styles.noOfPagesLabel} numberOfLines={1} adjustsFontSizeToFit={true}>{endObj?.endData} of {dataLength}</Text>\n                    ): (\n                        <Text style={styles.noOfPagesLabel} numberOfLines={1} adjustsFontSizeToFit={true}>{startObj?.startData}-{endObj?.endData} of {dataLength}</Text>\n                    )): (\n                        <Text style={styles.noOfPagesLabel} numberOfLines={1} adjustsFontSizeToFit={true}>0 of 0</Text>\n                    )\n                }\n            </View>\n\n            <TouchableOpacity disabled={(startObj?.startData == 1 || !isDataAvailable) ? true: false} onPress={handleNextPreviousPagePress.bind(null, 'back')}>\n                <View style={styles.lessThan}>\n                    <Image source={require('../assets/lessThan.png')} resizeMode={'contain'} style={[styles.iconStyle, {opacity: (startObj?.startData == 1 || !isDataAvailable) ? 0.3: 1}]} />\n                </View>\n            </TouchableOpacity>\n            <TouchableOpacity disabled={(endObj?.endData == dataLength || !isDataAvailable) ? true: false} onPress={handleNextPreviousPagePress.bind(null, 'next')}>\n                <View style={styles.greaterThan}>\n                    <Image source={require('../assets/greaterThan.png')} resizeMode={'contain'} style={[styles.iconStyle, {opacity: (endObj?.endData == dataLength || !isDataAvailable) ? 0.3: 1}]} />\n                </View>\n            </TouchableOpacity>\n        </View>\n    );\n});\n\nexport default DataTableFooter;\n\nconst styles = StyleSheet.create({\n    lastRow: {\n        // marginTop: 10,\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        height: LAST_ROW_HEIGHT,\n        paddingHorizontal: 10\n        // backgroundColor: 'green'\n        // paddingBottom: PADDING_BOTTOM,\n        // marginRight: 7\n    },\n    greaterThan: {\n        paddingRight: 7,\n        paddingLeft: 14.5,\n        // paddingTop: 13,\n        // paddingBottom: PADDING_BOTTOM,\n        justifyContent: 'center',\n        // alignItems: 'flex-end',\n        height: '100%',\n        // backgroundColor: 'green'\n    },\n    lessThan: {\n        paddingLeft: 14.5,\n        // paddingTop: 13,\n        // paddingBottom: PADDING_BOTTOM,\n        paddingRight: 14.5,\n        justifyContent: 'center',\n        height: '100%',\n        // backgroundColor: '#414a4c',\n    },\n    noOfPages: {\n        paddingLeft: 14.5,\n        // paddingTop: 12,\n        // paddingBottom: PADDING_BOTTOM,\n        paddingRight: 14.5,\n        justifyContent: 'center'\n        // height: 40,\n        // backgroundColor: '#414a4c',\n\n    },\n    noOfPagesLabel: {\n        color: 'grey',\n        fontSize: 12\n    },\n    iconStyle: {\n        height: LAST_ROW_HEIGHT / 2\n    }\n});\n"]},"metadata":{},"sourceType":"module"}